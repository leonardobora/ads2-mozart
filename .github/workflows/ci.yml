name: CI - Linting, Testing & Building

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black flake8 mypy pytest bandit
    
    - name: Code formatting with Black
      run: |
        black --check src/ scripts/ --diff --color
    
    - name: Linting with Flake8
      run: |
        flake8 src/ scripts/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ scripts/ --count --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Type checking with MyPy
      run: |
        mypy src/ --ignore-missing-imports
    
    - name: Security scanning with Bandit
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/
    
    - name: Run unit tests
      run: |
        pytest tests/ -v --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build-docker:
    runs-on: ubuntu-latest
    needs: quality-checks
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t ads2-mozart:${{ github.sha }} .
    
    - name: Test Docker image
      run: |
        docker run --rm ads2-mozart:${{ github.sha }} python -c "import src; print('âœ… Docker build successful')"